工厂设计模式
目的:将创建对象的过程从客户类中抽离出来,由工厂封装所有的变化,需要什么从工厂拿
简单工厂:
优点：实现简单,适用于产品较少的场景
缺点：当每次增加一个产品类的时候,都要对工厂类进行修改，不符合开闭原则。

工厂方法
一个工厂只生产一种产品,而这些工厂都实现了一个抽象接口
优点:每增加一件产品,只需要增加一个对应工厂类(利用反射解决增加工厂类),和产品类,不需要对原有工厂代码进行修改，
更符合开闭原则.扩展性强
缺点:增加了额外的开发量，当调用类需要更换产品时需要对调用类代码进行修改

抽象工厂
一个工厂生产多种(不同系列)产品
优点:易于交换产品系列
缺点:当需要增加另一种产品系列的时候需要对抽象工厂接口和具体实现类工厂都要进行修改
违背开闭原则

